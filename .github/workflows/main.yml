name: Pipeline with GCE
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
env:
  PROJECT_ID: ${{secrets.GCE_PROJECT}}
  GCE_INSTANCE: ${{secrets.GCE_INSTANCE}}  # TODO: update to instance name
  GCE_INSTANCE_ZONE: ${{secrets.GCE_INSTANCE_ZONE}}   # TODO: update to instance zone

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configure Workload Identity Federation and generate an access token.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          create_credentials_file: true
          workload_identity_provider: 'projects/401988245564/locations/global/workloadIdentityPools/test-pool/providers/test-pool-provider'
          service_account: 'test-service@tttt-377705.iam.gserviceaccount.com'

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Build the Docker image
      - name: Build
        run: |-
          docker build --tag "asia.gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "asia.gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"

      - name: Deploy
        run: |-
          # Update이기 때문에 첫 실행 자체는 Console에서 진행해야 한다!
               gcloud compute instances update-container "$GCE_INSTANCE" \
               --zone "$GCE_INSTANCE_ZONE" \
               --container-image "asia.gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"